@model Megasoft2.Models.WarehouseTransfer
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<fieldset>
    <div class="form-group" style="margin-left:-20px;font-size:xx-small;">
        <div class="form-horizontal row spacer-xs" id="firstrow">
            <div id="errordiv" class="col-xs-8" style="font-size:x-small">

            </div>
        </div>
        <div class="form-horizontal row spacer-xs" id="firstrow">
            <div class="control-label col-xs-2" style="text-align:left;">
                From_Wh.
            </div>
            <div class="editor-field col-xs-6">
                @Html.DropDownListFor(model => model.SourceWarehouse, new SelectList(ViewBag.Warehouse, "Warehouse", "Description"), new { @id = "ddlSource", @class = "form-control input-xs", @style = "font-size:xx-small;" })
            </div>
        </div>

        <div class="form-horizontal row spacer-xs" id="bin">
            <div class="control-label col-xs-2" style="text-align:left;">
                From_Bin
            </div>
            <div class="editor-field col-xs-6">
                @*@Html.TextBoxFor(model => model.SourceBin, new { @id = "txtSourceBin", @class = "form-control input-xs", @style = "font-size:xx-small;" })*@
                @Html.DropDownListFor(model => model.SourceWarehouse, new SelectList(ViewBag.BinList, "Bin", "Description"), new { @id = "txtSourceBin", @class = "form-control input-xs", @style = "font-size:xx-small;" })
            </div>
        </div>

        <div class="form-horizontal row spacer-xs">

            <div class="control-label col-xs-2" style="text-align:left;">
                To_Wh.
            </div>
            <div class="editor-field col-xs-6">
                @Html.DropDownListFor(model => model.DestinationWarehouse, new SelectList(ViewBag.Warehouse, "Warehouse", "Description"), new { @id = "ddlDestination", @class = "form-control input-xs", @style = "font-size:xx-small;" })
            </div>

        </div>
        <div class="form-horizontal row spacer-xs" id="destinationbin">

            <div class="control-label col-xs-2" style="text-align:left;">
                To_Bin
            </div>
            <div class="editor-field col-xs-6">
                @*@Html.TextBoxFor(model => model.DestinationBin, new { @id = "txtDestinationBin", @class = "form-control input-xs", @style = "font-size:xx-small;" })*@
                @Html.DropDownListFor(model => model.SourceWarehouse, new SelectList(ViewBag.BinList, "Bin", "Description"), new { @id = "txtDestinationBin", @class = "form-control input-xs", @style = "font-size:xx-small;" })
            </div>

        </div>
        <div class="form-horizontal row spacer-xs">

            <div class="control-label col-xs-2" style="text-align:left;">
                Barcode
            </div>
            <div class="editor-field col-xs-5">
                @Html.TextBoxFor(model => model.Barcode, new { @class = "form-control input-xs", @id = "txtBarcode", @style = "font-size:xx-small;" })
                @Html.ValidationMessageFor(model => model.Barcode)
                <input type="hidden" id="hdSupplier" />
            </div>
            <div class="col-xs-1 text-left" style="margin-left:-20px;">
                <a href="#" class="btn btn-success btn-xs" id="btnValidate" onclick="ValidateBarcode();">
                    <span class="fa fa-gear" aria-hidden="true" title="Validate Barcode"></span>
                </a>
            </div>

        </div>
        <div class="form-horizontal row spacer-xs">

            <div class="control-label col-xs-2" style="text-align:left;">
                StockCode
            </div>
            <div class="editor-field col-xs-6">
                @Html.TextBoxFor(model => model.StockCode, new { @class = "form-control input-xs", @id = "txtStockCode", @style = "font-size:xx-small;" })
                @Html.ValidationMessageFor(model => model.StockCode)
            </div>
            @*<div class="col-md-1 col-xs-2 text-left">
                    <a href="@Url.Action("Index", "StockCodeBrowse")" class="modal-link btn btn-success">
                        <span class="fa fa-search" aria-hidden="true" title="Browse"></span>
                    </a>
                </div>*@

        </div>
        <div class="form-horizontal row spacer-xs">

            <div class="control-label col-xs-2" style="text-align:left;">
                Reel
            </div>
            <div class="editor-field col-xs-6">
                @Html.TextBoxFor(model => model.LotNumber, new { @class = "form-control input-xs", @id = "txtLot", @style = "font-size:xx-small;" })
                @Html.ValidationMessageFor(model => model.LotNumber)
            </div>

        </div>
        <div class="form-horizontal row spacer-xs">

            <div class="control-label col-xs-2" style="text-align:left;">
                Quantity
            </div>
            <div class="editor-field col-xs-4">
                @Html.TextBoxFor(model => model.Quantity, new { @class = "form-control input-xs", @id = "txtQuantity", @style = "font-size:xx-small;" })
                @Html.ValidationMessageFor(model => model.Quantity)
            </div>
            <div class="editor-field col-xs-2 text-right">
                <a href="#" class="btn btn-primary btn-xs" id="btnAdd" onclick="AddLine();">
                    <span class="fa fa-plus" aria-hidden="true" title="Add"></span>
                </a>
            </div>
        </div>
        <div class="form-horizontal row text-center col-xs-8">
            <div class="control-label col-xs-1" style="text-align:left;font-size:xx-small;" id="txtCount">

            </div>
            <a href="#" class="btn btn-primary btn-xs" onclick="PostWarehouseTransfer();" id="btnPost">
                <span class="fa fa-save" aria-hidden="true" title="Post"></span>
            </a>

        </div>
        <div class="form-horizontal row spacer-xs col-xs-8">
            <table class="table table-hover table-striped table-condensed table-responsive table-bordered" id="tblLines" style="font-size:xx-small">
                <thead>
                    <tr>
                        <th>StockCode</th>
                        <th>Reel</th>
                        <th>Qty</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>
    </div>
</fieldset>



<script src="~/Scripts/jquery-1.8.2.min.js"></script>
<script type="text/javascript">

    function ValidateBarcode() {
        $('#errordiv').text("");
        $('#errordiv').removeClass("alert alert-danger");

        var e = document.getElementById("ddlSource");
        var SourceWarehouse = e.options[e.selectedIndex].value;

        var f = document.getElementById("ddlDestination");
        var DestinationWarehouse = f.options[f.selectedIndex].value;

        var str = document.getElementById('txtBarcode').value;
        //If Megasoft Barcode
        if (str.indexOf("|") > 0) {
            var Values = document.getElementById('txtBarcode').value.split("|");
            document.getElementById('txtStockCode').value = Values[0];
            document.getElementById('txtLot').value = Values[4];
            document.getElementById('txtQuantity').value = Values[2];


            var mydata = [];
            var myObject = new Object();
            myObject.SourceWarehouse = SourceWarehouse;
            myObject.DestinationWarehouse = DestinationWarehouse;
            myObject.StockCode = Values[0];
            myObject.LotNumber = Values[4];
            myObject.Quantity = Values[2]

            mydata.push(myObject);

            var myString = JSON.stringify({ details: JSON.stringify(mydata) });
            var exportdata = myString;

            $.ajax({
                type: "POST",
                url: "WarehouseTransfer/ValidateDetails",
                data: exportdata,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: OnSuccess,
                failure: OnErrorCall
            });

            function OnSuccess(response) {
                if (response != "") {
                    document.getElementById('txtBarcode').value = "";
                    document.getElementById('txtStockCode').value = "";
                    document.getElementById('txtLot').value = "";
                    document.getElementById('txtQuantity').value = "";
                    $('#errordiv').text(response);
                    $('#errordiv').addClass("alert alert-danger");
                    document.getElementById('txtBarcode').focus();
                }
                else {
                    document.getElementById("txtBarcode").focus();
                    AddLine();

                }

            }

            function OnErrorCall(response) {
                if (response != "") {
                    document.getElementById('txtBarcode').value = "";
                    document.getElementById('txtStockCode').value = "";
                    document.getElementById('txtLot').value = "";
                    document.getElementById('txtQuantity').value = "";
                    $('#errordiv').text(response);
                    $('#errordiv').addClass("alert alert-danger");
                    document.getElementById('txtBarcode').focus();
                }
                else {
                    document.getElementById("btnPost").focus();
                }
            }
        }
        else {

            //var mydata = [];
            //var myObject = new Object();
            //myObject.Barcode = document.getElementById('txtBarcode').value;
            //var e = document.getElementById("ddlSource");
            //var sw = e.options[e.selectedIndex].text.split(" - ");
            //var SourceWarehouse = sw[0];
            //myObject.SourceWarehouse = SourceWarehouse;

            //mydata.push(myObject);

            //var myString = JSON.stringify({ details: JSON.stringify(mydata) });
            //var exportdata = myString;

            //$.ajax({
            //    type: "POST",
            //    url: "WarehouseTransfer/GetStockAndSupplier",
            //    data: exportdata,
            //    contentType: "application/json; charset=utf-8",
            //    dataType: "json",
            //    success: On2Success,
            //    failure: On2ErrorCall
            //});

            //function On2Success(response) {
            //    if (response[0].StockCode == null) {
            //        document.getElementById('txtStockCode').value = document.getElementById('txtBarcode').value;
            //        document.getElementById('hdSupplier').value = "";
            //        document.getElementById('txtBarcode').value = "";
            //        document.getElementById('txtLot').focus();
            //    }
            //    else if (response[0].ReelNumber != null) {
            //        //Assume Lot exists in File Import
            //        document.getElementById('txtStockCode').value = response[0].StockCode;
            //        document.getElementById('txtLot').value = response[0].ReelNumber;
            //        document.getElementById('txtQuantity').value = response[0].ReelQuantity;
            //        AddLine();
            //    }
            //    else {

            //        document.getElementById('txtStockCode').value = response[0].StockCode;
            //        document.getElementById('hdSupplier').value = response[0].Supplier;
            //        document.getElementById('txtBarcode').value = "";
            //        document.getElementById('txtLot').focus();
            //    }


            //}

            //function On2ErrorCall(response) {
            //    alert(response);
            //}

            GetPalletItems(document.getElementById('txtBarcode').value, SourceWarehouse, DestinationWarehouse);
        }




    }

    function checkMultiBins(Warehouse, WhSource) {
        var mydata = [];
        var myObject = new Object();
        myObject.Warehouse = Warehouse;

        mydata.push(myObject);

        var myString = JSON.stringify({ details: JSON.stringify(mydata) });
        var exportdata = myString;

        $.ajax({
            type: "POST",
            url: "WarehouseTransfer/CheckWarehouseMultiBin",
            data: exportdata,
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: OnSuccess,
            failure: OnErrorCall
        });

        function OnSuccess(response) {
            if (response == "Y") {
                if (WhSource == "Source") {
                    $('#bin').show();
                }
                else {
                    $('#destinationbin').show();

                }

                GetBins(Warehouse, WhSource);

            }
            else {
                if (WhSource == "Source") {
                    $('#bin').hide();
                }
                else {
                    $('#destinationbin').hide();
                }
            }

        }

        function OnErrorCall(response) {
            if (response != "") {
                $('#errordiv').text(response);
                $('#errordiv').addClass("alert alert-danger");
            }
        }
    }


    function GetBins(Warehouse, WhSource) {

                var myString = JSON.stringify({
                    Warehouse: Warehouse
                });
                var exportdata = myString;

                $.ajax({
                    type: "POST",
                    url:"@Url.Action("GetBinList", "WarehouseTransfer")",
                    contentType: "application/json; charset=utf-8",
                    data: exportdata,
                    dataType: "json",
                    success: OnSuccess,
                    failure: function () {
                        alert(response);
                    }
                });
                function OnSuccess(response) {
                    if (response) {
                        var ddlWarehouse = $("#txtSourceBin");
                        if (WhSource == "Source") {
                            ddlWarehouse = $("#txtSourceBin");
                        }
                        else {
                            ddlWarehouse = $("#txtDestinationBin");
                        }
                        ddlWarehouse.empty();
                        $("#WorkCentre").prepend("<option value='' selected='selected'></option>");

                        $.each(response, function () {
                            //alert(this['Value'] + ' space ' + this['Text']);
                            ddlWarehouse.append($("<option></option>").val(this['Bin'].trim()).html(this['Description']));
                        });
                    }
                }

        }



    function PostWarehouseTransfer() {
        $('#errordiv').text("");
        $('#errordiv').removeClass("alert alert-danger");
        showprogressbar();

        var e = document.getElementById("ddlSource");
        var sw = e.options[e.selectedIndex].text.split(" - ");
        var SourceWarehouse = sw[0];
        var SourceBin = document.getElementById('txtSourceBin').value

        var f = document.getElementById("ddlDestination");
        var dw = f.options[f.selectedIndex].text.split(" - ");
        var DestinationWarehouse = dw[0];
        var DestinationBin = document.getElementById('txtDestinationBin').value;


        if ($('#destinationbin').is(':visible')) {
            if(DestinationBin == "")
            {
                alert("To Bin cannot be blank.");
                hideprogressbar();
                return;
            }
        }

        if ($('#bin').is(':visible')) {
            if (SourceBin == "") {
                alert("From Bin cannot be blank.");
                hideprogressbar();
                return;
            }
        }


        var mydata = [];
        $("#tblLines > tbody > tr ").each(function (i, el) {
            var $tds = $(this).find('td')
            var StockCode = $tds.eq(0).text();
            var Lot = $tds.eq(1).text();;
            var Quantity = $tds.eq(2).text();;

            var myObject = new Object();
            myObject.SourceWarehouse = SourceWarehouse;
            myObject.SourceBin = SourceBin;
            myObject.StockCode = StockCode;
            myObject.LotNumber = Lot;
            myObject.Quantity = Quantity;
            myObject.DestinationWarehouse = DestinationWarehouse;
            myObject.DestinationBin = DestinationBin;

            mydata.push(myObject);
        });

        var myString = JSON.stringify({ details: JSON.stringify(mydata) });
        var exportdata = myString;

        $.ajax({
            type: "POST",
            url: "WarehouseTransfer/PostWarehouseTransfer",
            data: exportdata,
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: OnSuccess,
            failure: OnErrorCall
        });

        function OnSuccess(response) {
            if (response != "") {
                document.getElementById('txtBarcode').value = "";
                document.getElementById('txtStockCode').value = "";
                document.getElementById('txtLot').value = "";
                document.getElementById('txtQuantity').value = "";
                document.getElementById('txtSourceBin').value = "";
                document.getElementById('txtDestinationBin').value = "";
                $('#errordiv').text(response);
                $('#errordiv').addClass("alert alert-danger");
                if (response.indexOf("Posting Complete.") == 0) {
                    $('#tblLines tbody').empty();
                    if ("@ViewBag.SmartId" != "") {
                        window.setTimeout(function () {
                            window.location = "http://192.168.0.22/Megasoft";
                        }, 3000);
                    }
                }

            }
            hideprogressbar();
        }

        function OnErrorCall(response) {
            if (response != "") {
                $('#errordiv').text(response);
                $('#errordiv').addClass("alert alert-danger");

            }
            hideprogressbar();
        }
    }


    function AddLine() {
        $('#errordiv').text("");
        $('#errordiv').removeClass("alert alert-danger");
        showprogressbar();



        var StockCode = document.getElementById('txtStockCode').value;
        var Lot = document.getElementById('txtLot').value;
        var Quantity = document.getElementById('txtQuantity').value;
        var AddReel = true;

        if (Quantity.trim() == "") {
            alert("Quantity missing.");
            AddReel = false;
        }

        $("#tblLines > tbody > tr ").each(function (i, el) {
            var $tds = $(this).find('td');
            var ReelNumber = $tds.eq(1).text();
            if (Lot == ReelNumber) {
                AddReel = false;
                alert("Reel " + Lot + " already scanned.");
                return;
            }
        });


        if (AddReel == true) {
            $('#tblLines tbody').append("<tr class='nr'><td>" + StockCode +
                "</td><td>" + Lot + "</td><td>" + Quantity +
                "</td><td><a href='#' class='delLine btn btn-danger btn-xs' tabindex='-1'><span class='fa fa-trash-o' aria-hidden='true' title='Delete Line' tabindex='-1'></span></a></td></tr>");
        }


        document.getElementById('txtBarcode').value = "";
        document.getElementById('txtStockCode').value = "";
        document.getElementById('txtLot').value = "";
        document.getElementById('txtQuantity').value = "";
        document.getElementById('txtBarcode').focus();

        var rows = document.getElementById('tblLines').getElementsByTagName("tbody")[0].getElementsByTagName("tr").length;
        $('#txtCount').html('Total:' + rows);

        hideprogressbar();
    }


    function GetSmartIdData(SmartId) {
        //var mydata = [];
        //var myObject = new Object();
        //myObject.SmartId = SmartId;

        //mydata.push(myObject);

        //var myString = JSON.stringify({ details: JSON.stringify(mydata) });
        //var exportdata = myString;

        $.ajax({
            type: "POST",
            url: "WarehouseTransfer/GetSmartIdData?SmartId=" + SmartId,
            //data: exportdata,
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: OnSmartSuccess,
            failure: OnSmartErrorCall
        });

        function OnSmartSuccess(response) {

            $.each(response, function (i, a) {
                //alert(a.SourceWarehouse);
                $('#ddlSource').val(a.SourceWarehouse);
                $('#ddlDestination').val(a.DestWarehouse);
                $('#txtSourceBin').val(a.SourceBin);
                $('#txtDestinationBin').val(a.DestBin);
                $('#txtBarcode').focus();
                checkMultiBins(a.SourceWarehouse, "Source");
                checkMultiBins(a.DestWarehouse, "Destination");
            });
        }

        function OnSmartErrorCall(response) {
            if (response != "") {
                $('#errordiv').text(response);
                $('#errordiv').addClass("alert alert-danger");
            }
        }
    }


    function GetPalletItems(PalletNo, SrcWarehouse, DestWarehouse) {
        $.getJSON('WarehouseTransfer/GetPalletItems?PalletNo=' + PalletNo + '&SourceWarehouse=' + SrcWarehouse + '&DestWarehouse=' + DestWarehouse, function (data) {
            if (typeof data == 'object') {
                $.each(data, function (i, item) {
                    var AddReel = true;
                    $("#tblLines > tbody > tr ").each(function (i, el) {
                        var $tds = $(this).find('td');
                        var ReelNumber = $tds.eq(1).text();
                        if (item.Lot == ReelNumber) {
                            AddReel = false;
                        }
                    });

                    if (AddReel == true) {
                        $('#tblLines tbody').append("<tr class='nr'><td>" + item.StockCode +
                            "</td><td>" + item.Lot + "</td><td>" + item.Quantity +
                            "</td><td><a href='#' class='delLine btn btn-danger btn-xs' tabindex='-1'><span class='fa fa-trash-o' aria-hidden='true' title='Delete Line' tabindex='-1'></span></a></td></tr>");
                    }

                });
                var rows = document.getElementById('tblLines').getElementsByTagName("tbody")[0].getElementsByTagName("tr").length;
                $('#txtCount').html('Total:' + rows);

                document.getElementById('txtBarcode').value = "";
                document.getElementById('txtStockCode').value = "";
                document.getElementById('txtLot').value = "";
                document.getElementById('txtQuantity').value = "";
                document.getElementById('txtBarcode').focus();

            }
            else {
                alert("Invalid barcode scanned!");
                alert(data);
                document.getElementById('txtBarcode').value = "";
                document.getElementById('txtStockCode').value = "";
                document.getElementById('txtLot').value = "";
                document.getElementById('txtQuantity').value = "";
                $('#errordiv').text(data);
                $('#errordiv').addClass("alert alert-danger");
                document.getElementById('txtBarcode').focus();
            }
        });


    }




    $(document).ready(function () {

        //change page title text
        $('#megasoftTitle').text(' Megasoft - Immediate');
        var span = document.getElementById("megasoftTitle");
        span.style.fontSize = "x-small";

        //
        //var target = $('a[name=firstrow]');
        //if (target.length) {
        //    var top = target.offset().top;
        //    $('html,body').animate({ scrollTop: top }, 1000);
        //    return false;
        //}



        //On Load Check if source warehouse is multibin
        //if ($('#ddlSource').val() == "Y")
        //{
        //    $('#bin').show();

        //}
        //else {
        //    $('#bin').hide();
        //}

        ////On Load Check if destination warehouse is multibin
        //if ($('#ddlDestination').val() == "Y") {
        //    $('#destinationbin').show();

        //}
        //else {
        //    $('#destinationbin').hide();
        //}

        //On Load Check if source warehouse is multibin
        var e = document.getElementById("ddlSource");
        var SourceWarehouse = e.options[e.selectedIndex].value;
        checkMultiBins(SourceWarehouse, "Source");

        //On Load Check if destination warehouse is multibin
        var f = document.getElementById("ddlDestination");
        var DestWarehouse = f.options[f.selectedIndex].value;
        checkMultiBins(DestWarehouse, "Destination");









        //When warehouse changed, check if source warehouse is multibin
        $("#ddlSource").change(function () {
            var e = document.getElementById("ddlSource");
            var SourceWarehouse = e.options[e.selectedIndex].value;
            checkMultiBins(SourceWarehouse, "Source");
        });

        //When warehouse changed, check if destination warehouse is multibin
        $("#ddlDestination").change(function () {
            var f = document.getElementById("ddlDestination");
            var DestWarehouse = f.options[f.selectedIndex].value;
            checkMultiBins(DestWarehouse, "Destination");
        });



        $('#txtLot').on('change', function (e) {
            if ($('#hdSupplier').val() == "MON001") {
                var str = document.getElementById('txtLot').value;
                document.getElementById('txtLot').value = str.substring(0, 9);
                document.getElementById('txtQuantity').value = str.substring(9, 13);
                document.getElementById("btnPost").focus();
                AddLine();
            }
            else if ($('#hdSupplier').val() == "KOR001") { //Newsprint -
                var str = document.getElementById('txtLot').value;
                document.getElementById('txtLot').value = str.substring(0, 8);
                document.getElementById('txtQuantity').value = str.substring(8, 12);
                document.getElementById("btnPost").focus();
                AddLine();
            }

            //Jackaroo has seperate barcode for reel and seperate barcode for Qty - No decoding required.
            //MPact has seprate barcode for reel. Qty barcode need to be decoded.

        });

        $('#txtQuantity').on('change', function (e) {
            if ($('#hdSupplier').val() == "MON007") //MPact Decode Qty Barcode
            {
                var str = document.getElementById('txtQuantity').value;
                document.getElementById('txtQuantity').value = str.substring(9, 13);
            }
        });



        $('#txtStockCode').on('change', function (e) {
            var str = document.getElementById('txtStockCode').value;
            if (str.indexOf("|") > 0) {
                var Values = document.getElementById('txtStockCode').value.split("|");
                document.getElementById('txtStockCode').value = Values[0];
                document.getElementById('txtLot').value = Values[4];
                document.getElementById('txtQuantity').value = Values[2];
            }
        });


        $('#tblLines').on("click", ".delLine", function () {
            $(this).closest("tr").remove();
            var rows = document.getElementById('tblLines').getElementsByTagName("tbody")[0].getElementsByTagName("tr").length;
            $('#txtCount').html('Total:' + rows);
        });





        //Check for Smart Scan
        if ("@ViewBag.SmartId" != "") {
            GetSmartIdData("@ViewBag.SmartId");
        }

    });
</script>
