@model Megasoft2.mtInvoiceExtractSetting

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>mtInvoiceExtractSetting</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.CustomerClass)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.CustomerClass)
            @Html.ValidationMessageFor(model => model.CustomerClass)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.OutputFilePath)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.OutputFilePath)
            @Html.ValidationMessageFor(model => model.OutputFilePath)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.SFTPUrl)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.SFTPUrl)
            @Html.ValidationMessageFor(model => model.SFTPUrl)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.SFTPUsername)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.SFTPUsername)
            @Html.ValidationMessageFor(model => model.SFTPUsername)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.SFTPPassword)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.SFTPPassword)
            @Html.ValidationMessageFor(model => model.SFTPPassword)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.SFTPFolder)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.SFTPFolder)
            @Html.ValidationMessageFor(model => model.SFTPFolder)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.SFTPPort)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.SFTPPort)
            @Html.ValidationMessageFor(model => model.SFTPPort)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ServiceScheduleMode)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ServiceScheduleMode)
            @Html.ValidationMessageFor(model => model.ServiceScheduleMode)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ServiceRunTime)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ServiceRunTime)
            @Html.ValidationMessageFor(model => model.ServiceRunTime)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ServiceWeeklyDay)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ServiceWeeklyDay)
            @Html.ValidationMessageFor(model => model.ServiceWeeklyDay)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ServiceMonthlyDate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ServiceMonthlyDate)
            @Html.ValidationMessageFor(model => model.ServiceMonthlyDate)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ServiceActive)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ServiceActive)
            @Html.ValidationMessageFor(model => model.ServiceActive)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.LastRunDate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.LastRunDate)
            @Html.ValidationMessageFor(model => model.LastRunDate)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ServiceIntervalMin)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ServiceIntervalMin)
            @Html.ValidationMessageFor(model => model.ServiceIntervalMin)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ApiExtractUri)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ApiExtractUri)
            @Html.ValidationMessageFor(model => model.ApiExtractUri)
        </div>

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
