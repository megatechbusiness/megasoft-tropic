@model Megasoft2.ViewModel.WhseManDelayedPostingWarehouse
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm(null, null, FormMethod.Post, new { @id = "ErrorPosting" }))
{
    @Html.AntiForgeryToken()
    if (!Html.ViewData.ModelState.IsValid)
    {
        <div class="alert alert-danger fade in">
            @Html.ValidationSummary(true)
        </div>
    }

    <h4 style="font-weight:bold;" class="text-center">Posting Manager</h4>
    <h4 class="text-right">@ViewBag.Unposted</h4><hr />
    <div class="form-horizontal row spacer">
        <div class="col-md-12 col-xs-12">
            <div class="table-responsive">
                <div class="col-lg-6">
                    <input type="submit" value="refresh" class="btn btn-default btn-sm" name="action:PostingManager" />
                </div>


                <div class="col-lg-6 text-right">
                    <input type="submit" value="re-post" class="btn btn-default btn-sm" name="action:RePost" />
                    <input type="submit" value="Delete" class="btn btn-danger btn-sm" name="action:DeleteItem" />
                </div>
                <div style="overflow: auto;height: 600px" class="col-lg-12">
                    <table class=" table table-hover table-striped table-condensed table-responsive table-bordered" id="tblLines">
                        <thead class="style1">
                            <tr class="nowrap">
                                <th><input type="checkbox" id="RepostAll" class="RepostAll" />Re-Post</th>
                                <th>TrnType</th>
                                <th>From Wh</th>
                                <th>From Bin</th>
                                <th>To Wh</th>
                                <th>To Bin</th>
                                <th>StockCode/Job</th>
                                <th>Lot</th>
                                <th>Qty</th>
                                <th>User</th>
                                <th>Date</th>
                                <th>Error Message</th>
                                <td>
                                    <input type="checkbox" id="DeleteAll" class="DeleteAll" />
                                    Delete
                                </td>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model.Errors != null)
                            {
                                for (int i = 0; i < Model.Errors.Count(); i++)
                                {

                                    <tr class="noerror nr nowrap">
                                        <td>
                                            @if (string.IsNullOrEmpty(@Model.Errors[i].ErrorMessage))
                                            {

                                            }
                                            else
                                            {
                                                @Html.CheckBoxFor(model => model.Errors[i].RePost, new {@class= "chkRepost" })
                                            }

                                        </td>
                                        <td>
                                            @Html.DisplayFor(model => model.Errors[i].MovementType)
                                            @Html.HiddenFor(model => model.Errors[i].MovementType)
                                            @Html.HiddenFor(model => model.Errors[i].TrnId)

                                        </td>
                                        <td>
                                            @Html.DisplayFor(model => model.Errors[i].FromWarehouse)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(model => model.Errors[i].FromBin)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(model => model.Errors[i].ToWarehouse)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(model => model.Errors[i].ToBin)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(model => model.Errors[i].StockCode)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(model => model.Errors[i].Lot)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(model => model.Errors[i].Quantity)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(model => model.Errors[i].Username)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(model => model.Errors[i].TrnDate)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(model => model.Errors[i].ErrorMessage)
                                        </td>

                                        <td>
                                            @if (string.IsNullOrEmpty(@Model.Errors[i].ErrorMessage))
                                            {

                                            }
                                            else
                                            {
                                                @Html.CheckBoxFor(model => model.Errors[i].DeleteItem, new { @class = "chkDelete" })
                                            }
                                        </td>
                                    </tr>
                                }

                            }


                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    @section Scripts {

        <style type="text/css">
            .nowrap {
                white-space: nowrap;
            }
        </style>

        @Scripts.Render("~/Scripts/jquery-1.8.2.min.js")
        @Scripts.Render("~/Scripts/jquery-ui-1.8.24.min.js")
        @Scripts.Render("~/bundles/jqueryval")
        @Scripts.Render("~/Content/UltimateScrolling/Sortable.js")
        @Scripts.Render("~/Content/UltimateScrolling/UltimateScrollingTable.js")



        <script type="text/javascript">

            $(function () {
                UltimateScrollingTable('tblLines', 500, 1600, 0);

                $('.RepostAll').on("change", function () {
                    //alert();
                    var status = $(this).is(":checked") ? true : false;
                    $(".chkRepost").prop("checked", status);

                });
                $('.DeleteAll').on("change", function () {
                   // alert();
                    var status = $(this).is(":checked") ? true : false;
                    $(".chkDelete").prop("checked", status);

                });
            });
        </script>
    }
}
