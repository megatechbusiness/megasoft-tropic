@model Megasoft2.Models.MasterCardBomOperation
<div class="bs-example">
    <div class="panel panel-green">
        <!-- Default panel contents -->
        <div class="panel-heading" style="max-height: 52px;">
            <div class="row">
                BOM Operation
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                &nbsp;&nbsp;
            </div>
        </div>



        <div class="panel-body">
            <div class="col-md-12">
                <div class="form-horizontal row">
                    <div class="row">
                        <div class="col-lg-12">
                            <div class="">
                                @* Filters Goes Here *@
                                <table class="table table-bordered table-condensed table-responsive table-striped">
                                    <thead>
                                        <tr>
                                            <th>Key Id</th>
                                            <th>
                                                @Html.TextBoxFor(model => model.Id, new { @class = "form-control input-sm", @readonly = "readonly" })
                                            </th>
                                        </tr>
                                        <tr>
                                            <th>Operation</th>
                                            <th>
                                                @Html.TextBoxFor(model => model.Operation, new { @class = "form-control input-sm", @readonly = "readonly" })
                                            </th>
                                        </tr>
                                        <tr>
                                            <th>StockCode</th>
                                            <th>
                                                @Html.TextBoxFor(model => model.StockCode, new { @class = "form-control input-sm", @readonly = "readonly", @Id="operStockCode" })
                                                @Html.HiddenFor(model => model.Mode)
                                                @*@Html.TextBoxFor(model => model.Mode)*@
                                            </th>
                                        </tr>

                                        <tr>
                                            <th>WorkCentre</th>
                                            <th>
                                                @Html.DropDownListFor(model => model.WorkCentre, new SelectList(ViewBag.WorkCentreList, "Value", "Text"), new { @class = "form-control input-sm", @id = "ddlAddOpWorkCentre" })
                                                @Html.HiddenFor(model => model.Route)
                                            </th>
                                        </tr>
                                        <tr>
                                            <th>Quantity</th>
                                            <th>
                                                @Html.TextBoxFor(model => model.Quantity, new { @class = "form-control input-sm", @readonly = "readonly" })

                                            </th>
                                        </tr>
                                        <tr>
                                            <th>Time Taken</th>
                                            <th>
                                                @Html.TextBoxFor(model => model.TimeTaken, new { @class = "form-control input-sm", @readonly = "readonly" })

                                            </th>
                                        </tr>
                                        <tr>
                                            <th>Unit Run Time</th>
                                            <th>
                                                @Html.TextBoxFor(model => model.UnitRunTime, new { @class = "form-control input-sm", @readonly = "readonly" })

                                            </th>
                                        </tr>
                                        <tr>
                                            <th>
                                                Narrations
                                            </th>
                                            <th>
                                                @Html.TextAreaFor(model => model.Narrations, new { @class = "form-control", @rows = "10" })
                                            </th>
                                        </tr>

                                        <tr>
                                            <td colspan="2">
                                                <div id="errordiv">

                                                </div>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td colspan="3" class="text-right">
                                               
                                                @if (Model.Mode == "Delete")
                                                {

                                                    <button type="button" class="btn btn-danger btn-sm" id="btnSaveOperation">
                                                        <i class="fa fa-trash"> Delete</i>
                                                    </button>
                                                }
                                                else
                                                {
                                                    <button type="button" class="btn btn-success btn-sm" id="btnSaveOperation">
                                                        <i class="fa fa-save"> Save</i>
                                                    </button>

                                                }

                                            </td>
                                        </tr>
                                    </thead>
                                </table>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">

    function CheckEtCalcMethod(WorkCentre) {
        var mydata = [];
        var myObject = new Object();
        myObject.WorkCentre = WorkCentre;

        mydata.push(myObject);

        var myString = JSON.stringify({ details: JSON.stringify(mydata) });
        var exportdata = myString;

        $.ajax({
            type: "POST",
            url: "MasterCardStockCodeBomSetup/CheckEtCalcMethod",
            data: exportdata,
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: OnSuccessWc,
            failure: OnErrorCallWc
        });

        function OnSuccessWc(response) {
            //alert(response);
            if (response == "U") {
                //$('#TimeTaken').val("0.000000");
                //$('#Quantity').val("0.000000");
                //$('#UnitRunTime').val("0.000000");
                $('#UnitRunTime').removeAttr("readonly");
                $('#TimeTaken').attr("readonly", "readonly");
                $('#Quantity').attr("readonly", "readonly");
            }
            else if (response == "R") {
                $('#UnitRunTime').attr("readonly", "readonly");
                $('#TimeTaken').removeAttr("readonly");
                $('#Quantity').removeAttr("readonly");
                //$('#TimeTaken').val("0.000000");
                //$('#Quantity').val("0.000000");
                //$('#UnitRunTime').val("0.000000");
            }
            else {
                alert("Unknown ET Calc Method for WorkCentre " + WorkCentre);
            }

        }

        function OnErrorCallWc(response) {
            if (response != "") {
                $('#errordiv').text(response);
                $('#errordiv').addClass("alert alert-danger");
            }
        }
    }



    $(document).ready(function () {
        $('#btnSaveOperation').on('click', function (e) {
            e.preventDefault();

            var mydata = [];

            var f = document.getElementById("ddlAddOpWorkCentre");

            var WorkCentre = f.options[f.selectedIndex].value;

            var myObject = new Object();
            myObject.Id = $('#Id').val();
            myObject.Operation = $('#Operation').val();
            myObject.StockCode = $('#operStockCode').val();
            myObject.WorkCentre = WorkCentre;
            myObject.UnitRunTime = $('#UnitRunTime').val();;
            myObject.Quantity = $('#Quantity').val();;
            myObject.TimeTaken = $('#TimeTaken').val();;
            myObject.Mode = $('#Mode').val();
            myObject.Route = $('#Route').val();
            myObject.Narrations = $('#Narrations').val();

            mydata.push(myObject);

            var myString = JSON.stringify({ details: JSON.stringify(mydata) });
            var exportdata = myString;

            $.ajax({
                type: "POST",
                url: "MasterCardMaintenance/SaveOperation",
                data: exportdata,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: OnSuccess,
                failure: OnErrorCall
            });

            function OnSuccess(response) {
                $('#errordiv').text(response);
                $('#errordiv').addClass("alert alert-danger");
                GetTree();
            }

            function OnErrorCall(response) {
                $('#errordiv').text(response);
                $('#errordiv').addClass("alert alert-danger");
            }
        });


        $("#ddlAddOpWorkCentre").change(function () {
            var e = document.getElementById("ddlAddOpWorkCentre");
            var WorkCentre = e.options[e.selectedIndex].value;
            CheckEtCalcMethod(WorkCentre);
        });


        var e = document.getElementById("ddlAddOpWorkCentre");
        var WorkCentre = e.options[e.selectedIndex].value;
        CheckEtCalcMethod(WorkCentre);

    });
</script>