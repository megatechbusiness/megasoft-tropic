@model Megasoft2.ViewModel.DispatchPlannerViewModel


<div class="bs-example">
    <div class="panel panel-primary">
        <!-- Default panel contents -->
        <div class="panel-heading" style="max-height: 52px;">
            <div class="row">
                &nbsp&nbsp
                <div class="btn-group btn-breadcrumb">
                    <a href="@Url.Action("Home", "Home")" class="btn btn-default"><i class="glyphicon glyphicon-home"></i></a>
                    <a href="@Url.Action("Index", "DispatchPlanner")" class="btn btn-default">Dispatch Plans</a>
                </div>
            </div>
        </div>



        <div class="panel-body">
            <div class="col-md-12">

                @using (Html.BeginForm(null, null, FormMethod.Post, new { @id = "frmInvoice" }))
                {
                    @Html.AntiForgeryToken()
                    if (!Html.ViewData.ModelState.IsValid)
                    {
                        <div class="alert alert-danger fade in">
                            @Html.ValidationSummary(true)
                        </div>
                    }

                    <div class="">

                        <div class="form-horizontal row">
                            <div class="col-xs-12">
                                <div class="form-group">
                                    <div class="">

                                        <div class="form-horizontal row">
                                            <div class="form-group">
                                                <div class="" style="margin-left: 15px; margin-right: 15px;">
                                                    <div class="col-lg-4">
                                                        <label for="datePicker" style="text-align:center"> Dispatch Date: </label>
                                                        <input type="date" id="datePicker" name="datePicker" class="form-control input-sm" />
                                                        @Html.HiddenFor(model => Model.DispatchDate)
                                                    </div>

                                                    <div class="col-lg-3">
                                                        <label for="truckList">Transporter: </label>
                                                        @if (Model.TruckList != null)
                                                        {
                                                            var itemList = new List<SelectListItem>();
                                                            for (int i = 0; i < Model.TruckList.Count; i++)
                                                            {
                                                                var item = new SelectListItem() { Text = Model.TruckList[i], Value = Model.TruckList[i] };
                                                                itemList.Add(item);
                                                            }
                                                            @Html.DropDownListFor(n => n.TruckList, itemList, new { @class = "form-control input-sm", @id = "truckList", @style = "float: right" })
                                                        }
                                                        @*@Html.DropDownListFor(model => model.TruckList, new SelectList(ViewBag.TruckList), new { @class = "form-control input-sm", @id = "truckList" })*@

                                                        @*@Html.HiddenFor(model => Model.TruckList)*@
                                                    </div>

                                                    <div class="col-lg-3">
                                                        <label for="Tonnage">Truck Tonnage: </label>
                                                        @if (Model.Plans.Count > 0)
                                                        {
                                                            @Html.TextBoxFor(model => model.Plans[0].VehicleCapacity, new { @class = "form-control input-sm text-right", @id = "Tonnage", @style = "float: right" })
                                                        }
                                                        else
                                                        {
                                                            <input type="text" id="Tonnage" class="form-control input-sm text-right" style="float:right;" />
                                                        }
                                                    </div>

                                                    <div class=" col-sm-1 text-right">

                                                        <button type="submit" class="btn btn-default btn-sm" name="action:LoadData" value="LoadData" id="btnLoad">
                                                            <i class="fa fa-refresh fa-lg" title="Load" aria-hidden="true"></i>
                                                            <span class="sr-only">Load</span>
                                                        </button>
                                                    </div>

                                                    <div class="col-lg-1 text-right">
                                                        @if (ViewBag.CanSaveSchedule)
                                                        {
                                                            <button type="button" class="btn btn-primary btn-sm" id="btnSave">
                                                                <i class="fa fa-save fa-lg" title="Save" aria-hidden="true"></i>
                                                                <span class="sr-only">Save</span>
                                                            </button>
                                                        }
                                                    </div>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="form-horizontal row">
                                            <div class="form-group" style="padding-left:15px; padding-right:15px;">
                                                @if (Model.Plans.Count != 0)
                                                {
                                                    var itemList = new List<SelectListItem>();
                                                    for (int i = 1; i <= ViewBag.PlanNo.Count; i++)
                                                    {
                                                        var item = new SelectListItem() { Text = i.ToString(), Value = i.ToString() };
                                                        itemList.Add(item);
                                                    }
                                                    <div class="col-lg-1">
                                                        <label for="Plans" id="dlvLabel">Plan #    </label>
                                                        @Html.DropDownListFor(model => model.DeliveryNo, itemList, new { @class = "form-control input-sm", @id = "Plans" })
                                                    </div>

                                                    <div class="col-lg-3"></div>

                                                    <div class="col-lg-3">
                                                        <label>Selected Transporter: </label>
                                                        @Html.TextBoxFor(model => Model.Plans[0].Transporter, new { @class = "form-control input-sm", @id = "selectTruck", @readonly = "readonly", @style = "float: right" })
                                                    </div>

                                                    <div class="col-lg-3">
                                                        <label for="OrderTon">Total Estimated Mass: </label>
                                                        <input type="text" id="OrderTon" class="form-control input-sm text-right" readonly="readonly" style="float:right;" />
                                                    </div>

                                                    <div class="col-lg-2"></div>
                                                }
                                                @Html.HiddenFor(model => Model.DeliveryNo)
                                                @Html.HiddenFor(model => Model.Messages)


                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>


                    <div class="form-horizontal row">
                        <div class="col-xs-12">
                            <div class="form-group">
                                <div class="table-responsive">
                                    <div class="">
                                        <table id="example" class="table table-hover table-condensed table-responsive table-bordered tablegrid display nowrap" width="100%">
                                            <thead style="font-size:x-small">
                                                <tr>
                                                    <th></th>
                                                    <th>Customer</th>
                                                    <th>Sales Order</th>
                                                    <th>SO Line</th>
                                                    <th>StockCode</th>
                                                    <th>Desc.</th>
                                                    <th>Size</th>
                                                    <th>Order Qty.</th>
                                                    <th>Back Order Qty</th>
                                                    <th>Qty to Dispatch</th>
                                                    <th>Mass Balance</th>
                                                    <th>Transporter</th>
                                                    <th>Vehicle Capacity</th>
                                                    <th>Picker</th>
                                                    <th>Status</th>
                                                    <th>PickComplete</th>
                                                    <th>DatePickComplete</th>
                                                </tr>
                                            </thead>

                                            <tbody style="font-size:x-small">
                                                @if (Model != null)
                                                {
                                                    if (Model.Plans != null)
                                                    {
                                                        for (int i = 0; i < Model.Plans.Count; i++)
                                                        {

                                                            var rowColour = "";
                                                            if (i % 2 == 0)
                                                            {
                                                                rowColour = "#31b0d5";
                                                            }

                                                            <tr style="color:black;background-color:@rowColour">
                                                                <td>
                                                                    <a href="#" id="btnDelete" class="delLine btn btn-default btn-xs text-right">
                                                                        <span class="fa fa-trash" aria-hidden="true" title="Delete"><span style="font-family:Helvetica Neue, Helvetica, Arial, sans-serif; font-size:12px;"></span></span>
                                                                    </a>
                                                                    @Html.HiddenFor(model => Model.OrderPlans[i].ScheduleItem)
                                                                </td>
                                                                <td>
                                                                    @Model.OrderPlans[i].CustCode
                                                                    @Html.HiddenFor(model => Model.OrderPlans[i].Customer)
                                                                </td>
                                                                <td id="salesOrder">
                                                                    @Model.Plans[i].SalesOrder
                                                                    @Html.HiddenFor(model => Model.Plans[i].SalesOrder)
                                                                </td>
                                                                <td>
                                                                    @Model.Plans[i].SalesOrderLine
                                                                    @Html.HiddenFor(model => Model.Plans[i].SalesOrderLine)
                                                                </td>
                                                                <td>
                                                                    @Model.Plans[i].MStockCode
                                                                    @Html.HiddenFor(model => Model.Plans[i].MStockCode)

                                                                </td>
                                                                <td>
                                                                    @Model.Plans[i].MStockDesc
                                                                    @Html.HiddenFor(model => Model.Plans[i].MStockDesc)

                                                                </td>
                                                                <td>
                                                                    @Model.Plans[i].Size
                                                                    @Html.HiddenFor(model => Model.Plans[i].Size)
                                                                </td>
                                                                <td>
                                                                    @String.Format("{0:0.000000}", Convert.ToDecimal(Model.Plans[i].MOrderQty))
                                                                    @Html.HiddenFor(model => Model.Plans[i].MOrderQty)

                                                                </td>
                                                                <td>
                                                                    @String.Format("{0:0.000000}", Convert.ToDecimal(Model.Plans[i].MBackOrderQty))
                                                                    @Html.HiddenFor(model => Model.Plans[i].MBackOrderQty)
                                                                </td>
                                                                <td>
                                                                    @String.Format("{0:0.000000}", Convert.ToDecimal(Model.Plans[i].MQtyToDispatch))
                                                                    @Html.HiddenFor(model => Model.Plans[i].MQtyToDispatch)
                                                                </td>
                                                                <td>
                                                                    @String.Format("{0:0.000000}", Convert.ToDecimal(Model.Plans[i].MassBalance))
                                                                    @Html.HiddenFor(model => Model.OpenOrders[i].MassBalance)
                                                                </td>
                                                                <td>
                                                                    @Model.Plans[i].Transporter
                                                                    @Html.HiddenFor(model => Model.Plans[i].Transporter)
                                                                </td>
                                                                <td>
                                                                    @String.Format("{0:0.000000}", Convert.ToDecimal(Model.Plans[i].VehicleCapacity))
                                                                    @Html.HiddenFor(model => Model.Plans[i].VehicleCapacity)
                                                                </td>
                                                                <td>
                                                                    @Html.DropDownListFor(model => model.Picker, new SelectList(ViewBag.PickersList), new { @id = "PlanPicker" })
                                                                    @Html.HiddenFor(model => model.Plans[i].Picker)
                                                                </td>
                                                                <td>
                                                                    @Model.Plans[i].Status
                                                                    @Html.HiddenFor(model => Model.Plans[i].Status)
                                                                </td>
                                                                <td>
                                                                    @Model.Plans[i].PickComplete
                                                                    @Html.HiddenFor(model => Model.Plans[i].PickComplete)
                                                                </td>
                                                                <td>
                                                                    @Model.Plans[i].DatePickComplete
                                                                    @Html.HiddenFor(model => Model.Plans[i].DatePickComplete)
                                                                </td>

                                                            </tr>
                                                        }
                                                    }
                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
            }
            </div>
        </div>
    </div>
    </div>
    @*<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/v/dt/dt-1.10.18/datatables.min.css" />*@

    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/DataTable/dataTables.min.css")" />


    <style type="text/css">
        table#example.dataTable tbody tr.over {
            background-color: #ffa;
        }

            table#example.dataTable tbody tr.over > .sorting_1 {
                background-color: #ffa;
            }

        table#example2.dataTable tbody tr.over {
            background-color: #ffa;
        }

            table#example2.dataTable tbody tr.over > .sorting_1 {
                background-color: #ffa;
            }

        .form-control {
            display: inline;
            width: auto;
        }

        label {
            padding-right: 5px;
        }
    </style>

    @Scripts.Render("~/Scripts/jquery-1.8.2.min.js")
    @Scripts.Render("~/Scripts/jquery-ui-1.8.24.min.js")
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">




    $(document).ready(function () {

        $('#wrapper').addClass('toggled-2');
        $("#frmInvoice").submit(function (e) {
            showprogressbar();
        });
        $("#btnLoad").hide();

        //calendar shows current date
        Date.prototype.toDateInputValue = (function (date) {
            var local = new Date(date);
            if ($("#Messages").val() === "!today") {
                local.setDate(local.getDate() + 1);
            }
            return local.toJSON().slice(0, 10);
        });
        document.getElementById('datePicker').value = new Date().toDateInputValue($("#DispatchDate").val());

        //Display plans for date
        $('#datePicker').on("change", function () {
            $("#DispatchDate").val($("#datePicker").val());
            $("#btnLoad").click();
        })


        //input validity check
        $("#Tonnage").on("change", function () {
            if (!parseFloat($("#Tonnage").val())) {
                alert("Please only enter Numbers into Truck Tonnage!");
                $("#Tonnage").val("");
            }
        })

        //display selected transporter
        $("#truckList").on("change", function () {
            $("#displayTruck").show();
            $("#selectTruck").val($("#truckList :selected").val());
            if ($("#truckList :selected").val() == "Select Transporter") {
                $("#displayTruck").hide();
            }
        })


        $("#PlanPicker").on("change", function () {
            console.log(this);
            var $tds = $(this).closest("tr").find('td');
            $tds.eq(13).find('input[type=hidden]').val($("#PlanPicker :selected").val());
            console.log($tds.eq(13).find('input[type=hidden]').val());

        })

        
        var MassBal = $("#example").find("tr:nth-child(1)").find("td:nth-child(11)").text().trim();
        if (MassBal != 0) $("#OrderTon").val(MassBal);

        var rows = [];   // Global rows for #example

        var table = $('#example').DataTable({
            paging: false,
            "rowReorder": true,
            "ordering": false,
            "scrollY": 200,
            "scrollX": true,
            order: [[1, 'asc']],
            
        });


        $('#example').on("click", ".delLine", function () {
            var $tds = $(this).closest("tr").find('td');
            if (($tds.eq(0).find('input[type=hidden]').val()) == "N") {
                alert("Item not saved to schedule.");
            }
            else {
                var DispatchDate = $("#DispatchDate").val();
                if ($("#Plans").val() == null) {
                    var DeliveryNo = 1;
                } else {
                    var DeliveryNo = $("#DeliveryNo").val();
                }
                var Customer = $tds.eq(1).text().trim();
                var SalesOrder = $tds.eq(2).find('input[type=hidden]').val();
                var SalesOrderLine = $tds.eq(3).find('input[type=hidden]').val();
                var Mass = $tds.eq(10).find('input[type=hidden]').val();
                showprogressbar();
                var mydata = [];

                var myObject = new Object();
                myObject.DispatchDate = DispatchDate;
                myObject.DeliveryNo = DeliveryNo;
                myObject.Customer = Customer
                myObject.SalesOrder = SalesOrder;
                myObject.SalesOrderLine = SalesOrderLine;
                myObject.MassBalance = Mass;

                mydata.push(myObject);

                var myString = JSON.stringify({ details: JSON.stringify(mydata) });
                var exportdata = myString;

                $.ajax({
                    type: "POST",
                    url: "@Url.Action("DeleteSchedule", "DispatchPlanner")",
                    data: exportdata,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: OnDelSuccess,
                    failure: OnDelErrorCall
                });

                function OnDelSuccess(response) {
                    hideprogressbar();
                    alert(response);
                    if (response == "Schedule line deleted!") {
                        $("#btnLoad").click();
                    }
                }

                function OnDelErrorCall(response) {
                    hideprogressbar();
                    alert(response);
                }
            }
        });


        $('#example2').on("click", ".delLine", function () {
            alert('Cannot delete unscheduled item.');
        });

        $('#btnSave').on("click", async function() {
            showprogressbar();
            var mydata = [];
            var DispatchDate = $("#DispatchDate").val();

            if ($("#Plans").val() == null) {
                var DeliveryNo = 1;
            } else {
                var DeliveryNo = $("#DeliveryNo").val();
            }

            var Transporter = $("#selectTruck").val();
            var VehicleCapacity = $("#Tonnage").val();
            var MassBal = 0.0;

            $("#example > tbody > tr ").each( async function (i, el) {
                var $tds = $(this).closest("tr").find('td');
                var ms = parseFloat(this.cells[21].outerText) * 1000000;
                MassBal += Math.round(ms);

                var Customer = $tds.eq(2).text().trim();
                var SalesOrder = $tds.eq(3).find('input[type=hidden]').val();
                var SalesOrderLine = $tds.eq(4).find('input[type=hidden]').val();
                var MStockCode = $tds.eq(7).find('input[type=hidden]').val();
                var MStockDesc = $tds.eq(8).find('input[type=hidden]').val();
                var Size = $tds.eq(9).find('input[type=hidden]').val();
                var MOrderQty = $tds.eq(14).find('input[type=hidden]').val();
                var MBackOrderQty = $tds.eq(19).find('input[type=hidden]').val();
                var MQtyToDispatch = $tds.eq(20).find('input[type=hidden]').val();


                var myObject = new Object();
                myObject.DispatchDate = DispatchDate;
                myObject.DeliveryNo = DeliveryNo;
                myObject.Customer = Customer
                myObject.SalesOrder = SalesOrder;
                myObject.SalesOrderLine = SalesOrderLine;
                myObject.MStockCode = MStockCode;
                myObject.MStockDesc = MStockDesc;
                myObject.Size = Size;
                myObject.MOrderQty = MOrderQty;
                myObject.MBackOrderQty = MBackOrderQty;
                myObject.MQtyToDispatch = MQtyToDispatch;
                myObject.Transporter = Transporter;
                if (VehicleCapacity !== "") {
                    myObject.VehicleCapacity = VehicleCapacity;
                }

                //Add when picker functionality
                myObject.Picker = "";
                myObject.Status = "";

                mydata.push(myObject);

            });

            var myString = JSON.stringify({ details: JSON.stringify(mydata), mass: MassBal/1000000 });
            var exportdata = myString;
            //console.log(exportdata);

            $.ajax({
                type: "POST",
                url: "@Url.Action("SaveSchedule","DispatchPlanner")",
                data: exportdata,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: OnSuccess,
                failure: OnErrorCall
            });

            function OnSuccess(response) {
                hideprogressbar();
                alert(response);
                if (response == "Schedule saved!") {
                    $("#btnLoad").click();
                }
            }

            function OnErrorCall(response) {
                hideprogressbar();
                alert(response);
            }
        });


        $('#btnSendEmail').click(function (event) {
            $("#example").table2excel({
                // exclude CSS class
                exclude: ".noExl",
                name: "ReqHeader",
                filename: "ReqHeader", //do not include extension
                exclude_inputs: true
            });
        });

    });
    </script>
