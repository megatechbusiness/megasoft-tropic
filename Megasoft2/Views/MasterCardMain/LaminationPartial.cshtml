@model Megasoft2.ViewModel.MasterCardViewModel

<div class="form-horizontal row spacer">

    <div class="col-md-6">

        <div class="form-horizontal row spacer">
            <div class="col-md-12 col-xs-12">
                <label class="col-sm-4 control-label input-xs-label" style="text-align:left;">WorkCentre</label>
                <div class="col-sm-8">
                    @if (ViewBag.LaminationWorkCentres != null)
                    {
                        @Html.DropDownListFor(n => n.Lamination.WorkCentre, new SelectList(ViewBag.LaminationWorkCentres, "Value", "Text"), "Select Work Centre", new { @class = "form-control input-sm", style = "width:100%" })
                    }
                    else
                    {
                        @Html.TextBoxFor(model => model.Lamination.WorkCentre, new { @class = "form-control input-xs" })
                    }
                    @Html.HiddenFor(m => m.Lamination.WorkCentre)
                    @Html.HiddenFor(model => model.Lamination.Id)
                </div>

            </div>
        </div>
        <hr />
        <div class="form-horizontal row spacer ">
            <div class="col-md-12 col-xs-12">
                <div id="LaminationResults" class="table-responsive">
                    <table id="LaminationTable" class="table table-hover table-striped table-condensed table-responsive table-bordered">
                        <thead><tr><th></th><th>MICRON</th><th>SUBSTRATE</th><th>WIDTH</th><th>MASS</th><th>METRES</th></tr></thead>
                        <tbody>
                            <tr>
                                <td>1</td>
                                <td>@Html.TextBoxFor(model => model.Lamination.Micron1, new { @class = "form-control input-xs", @onkeypress = "if ( isNaN(this.value + String.fromCharCode(event.keyCode) )) return false;" })</td>
                                <td>@Html.TextBoxFor(model => model.Lamination.Substrate1, new { @class = "form-control input-xs", @onkeypress = "if ( isNaN(this.value + String.fromCharCode(event.keyCode) )) return false;" })</td>
                                <td>@Html.TextBoxFor(model => model.Lamination.Width1, new { @class = "form-control input-xs", @onkeypress = "if ( isNaN(this.value + String.fromCharCode(event.keyCode) )) return false;" })</td>
                                <td>@Html.TextBoxFor(model => model.Lamination.Mass1, new { @class = "form-control input-xs mass", @onkeypress = "if ( isNaN(this.value + String.fromCharCode(event.keyCode) )) return false;" })</td>
                                <td>@Html.TextBoxFor(model => model.Lamination.Metres1, new { @class = "form-control input-xs metre", @onkeypress = "if ( isNaN(this.value + String.fromCharCode(event.keyCode) )) return false;" })</td>
                            </tr>
                            <tr>
                                <td>2</td>
                                <td>@Html.TextBoxFor(model => model.Lamination.Micron2, new { @class = "form-control input-xs", @onkeypress = "if ( isNaN(this.value + String.fromCharCode(event.keyCode) )) return false;" })</td>
                                <td>@Html.TextBoxFor(model => model.Lamination.Substrate2, new { @class = "form-control input-xs", @onkeypress = "if ( isNaN(this.value + String.fromCharCode(event.keyCode) )) return false;" })</td>
                                <td>@Html.TextBoxFor(model => model.Lamination.Width2, new { @class = "form-control input-xs", @onkeypress = "if ( isNaN(this.value + String.fromCharCode(event.keyCode) )) return false;" })</td>
                                <td>@Html.TextBoxFor(model => model.Lamination.Mass2, new { @class = "form-control input-xs mass", @onkeypress = "if ( isNaN(this.value + String.fromCharCode(event.keyCode) )) return false;" })</td>
                                <td>@Html.TextBoxFor(model => model.Lamination.Metres2, new { @class = "form-control input-xs metre", @onkeypress = "if ( isNaN(this.value + String.fromCharCode(event.keyCode) )) return false;" })</td>
                            </tr>
                            <tr>
                                <td>3</td>
                                <td>@Html.TextBoxFor(model => model.Lamination.Micron3, new { @class = "form-control input-xs", @onkeypress = "if ( isNaN(this.value + String.fromCharCode(event.keyCode) )) return false;" })</td>
                                <td>@Html.TextBoxFor(model => model.Lamination.Substrate3, new { @class = "form-control input-xs", @onkeypress = "if ( isNaN(this.value + String.fromCharCode(event.keyCode) )) return false;" })</td>
                                <td>@Html.TextBoxFor(model => model.Lamination.Width3, new { @class = "form-control input-xs", @onkeypress = "if ( isNaN(this.value + String.fromCharCode(event.keyCode) )) return false;" })</td>
                                <td>@Html.TextBoxFor(model => model.Lamination.Mass3, new { @class = "form-control input-xs mass", @onkeypress = "if ( isNaN(this.value + String.fromCharCode(event.keyCode) )) return false;" })</td>
                                <td>@Html.TextBoxFor(model => model.Lamination.Metres3, new { @class = "form-control input-xs metre", @onkeypress = "if ( isNaN(this.value + String.fromCharCode(event.keyCode) )) return false;" })</td>
                            </tr>
                            <tr>
                                <td colspan="4">Totals</td>
                                <td><input class="form-control input-xs" readonly="readonly" id="MassTotal" /></td>
                                <td><input class="form-control input-xs" readonly="readonly" id="MetreTotal" /></td>
                            </tr>
                    </table>
                </div>
            </div>
        </div>
        <hr/>
        <div class="form-horizontal row spacer">
            <div class="col-md-12 col-xs-12">

                <label class="col-sm-4 control-label input-xs-label" style="text-align:left;">Special Instructions</label>
                <div class="col-sm-8">
                    @Html.TextAreaFor(model => model.Lamination.SpecialInstructions, 5, 40, new { @class = "form-control" })
                </div>

            </div>
        </div>
    </div>

    @*  *@
    <div class="col-md-6">
        <div class="form-horizontal row spacer">
            <div class="col-md-12 col-xs-12">

                <label class="col-sm-4 control-label input-xs-label" style="text-align:left;">Lam. Method</label>
                <div class="col-sm-8">
                    @Html.TextBoxFor(model => model.Lamination.LamMethod, new { @class = "form-control input-xs" })
                </div>

            </div>
        </div>



    </div>
    
</div>