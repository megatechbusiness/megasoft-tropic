//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Megasoft2
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class StockTakeEntities : DbContext
    {
        public StockTakeEntities()
            : base("name=StockTakeEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<InvMaster> InvMasters { get; set; }
        public DbSet<InvMaster_> InvMaster_ { get; set; }
        public DbSet<InvMultBin> InvMultBins { get; set; }
        public DbSet<InvStockTake> InvStockTakes { get; set; }
        public DbSet<InvWarehouse> InvWarehouses { get; set; }
        public DbSet<mtStockTakeCapture> mtStockTakeCaptures { get; set; }
        public DbSet<LotDetail> LotDetails { get; set; }
    
        public virtual ObjectResult<sp_GetLast3Scans_Result> sp_GetLast3Scans(string warehouse, string username)
        {
            var warehouseParameter = warehouse != null ?
                new ObjectParameter("Warehouse", warehouse) :
                new ObjectParameter("Warehouse", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetLast3Scans_Result>("sp_GetLast3Scans", warehouseParameter, usernameParameter);
        }
    
        public virtual ObjectResult<sp_GetStockTakeCaptureByWarehouse_Result> sp_GetStockTakeCaptureByWarehouse(string warehouse)
        {
            var warehouseParameter = warehouse != null ?
                new ObjectParameter("Warehouse", warehouse) :
                new ObjectParameter("Warehouse", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetStockTakeCaptureByWarehouse_Result>("sp_GetStockTakeCaptureByWarehouse", warehouseParameter);
        }
    
        public virtual ObjectResult<sp_GetStockTakeWarehouse_Result> sp_GetStockTakeWarehouse()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetStockTakeWarehouse_Result>("sp_GetStockTakeWarehouse");
        }
    
        public virtual int sp_ArchiveStockTake(string warehouse, string username)
        {
            var warehouseParameter = warehouse != null ?
                new ObjectParameter("Warehouse", warehouse) :
                new ObjectParameter("Warehouse", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ArchiveStockTake", warehouseParameter, usernameParameter);
        }
    
        public virtual int sp_DeleteStockTakeEntry(string warehouse, Nullable<int> iD)
        {
            var warehouseParameter = warehouse != null ?
                new ObjectParameter("Warehouse", warehouse) :
                new ObjectParameter("Warehouse", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DeleteStockTakeEntry", warehouseParameter, iDParameter);
        }
    
        public virtual int sp_SaveStockTake(string warehouse, string bin, string stockCode, string lot, Nullable<decimal> quantity, string username)
        {
            var warehouseParameter = warehouse != null ?
                new ObjectParameter("Warehouse", warehouse) :
                new ObjectParameter("Warehouse", typeof(string));
    
            var binParameter = bin != null ?
                new ObjectParameter("Bin", bin) :
                new ObjectParameter("Bin", typeof(string));
    
            var stockCodeParameter = stockCode != null ?
                new ObjectParameter("StockCode", stockCode) :
                new ObjectParameter("StockCode", typeof(string));
    
            var lotParameter = lot != null ?
                new ObjectParameter("Lot", lot) :
                new ObjectParameter("Lot", typeof(string));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(decimal));
    
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SaveStockTake", warehouseParameter, binParameter, stockCodeParameter, lotParameter, quantityParameter, usernameParameter);
        }
    }
}
