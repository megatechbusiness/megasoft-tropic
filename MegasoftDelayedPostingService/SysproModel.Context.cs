//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MegasoftDelayedPostingService
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SysproEntities : DbContext
    {
        public SysproEntities()
            : base("name=SysproEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<InvMaster> InvMasters { get; set; }
        public virtual DbSet<mtInvDelayedPosting> mtInvDelayedPostings { get; set; }
        public virtual DbSet<vw_InvWhControl> vw_InvWhControl { get; set; }
        public virtual DbSet<WipMaster> WipMasters { get; set; }
        public virtual DbSet<mtWhseManSetting> mtWhseManSettings { get; set; }
        public virtual DbSet<mtPalletControl> mtPalletControls { get; set; }
        public virtual DbSet<mtProductionLabel> mtProductionLabels { get; set; }
        public virtual DbSet<mtReportAutomation> mtReportAutomations { get; set; }
    
        public virtual ObjectResult<sp_GetDelayedPostingData_Result> sp_GetDelayedPostingData(string company)
        {
            var companyParameter = company != null ?
                new ObjectParameter("Company", company) :
                new ObjectParameter("Company", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetDelayedPostingData_Result>("sp_GetDelayedPostingData", companyParameter);
        }
    
        public virtual int sp_SaveInvTransfer(string movementType, string fromWarehouse, string fromBin, string toWarehouse, string toBin, string stockCode, string reelNo, Nullable<decimal> quantity, string journal, string gtrReference, string username)
        {
            var movementTypeParameter = movementType != null ?
                new ObjectParameter("MovementType", movementType) :
                new ObjectParameter("MovementType", typeof(string));
    
            var fromWarehouseParameter = fromWarehouse != null ?
                new ObjectParameter("FromWarehouse", fromWarehouse) :
                new ObjectParameter("FromWarehouse", typeof(string));
    
            var fromBinParameter = fromBin != null ?
                new ObjectParameter("FromBin", fromBin) :
                new ObjectParameter("FromBin", typeof(string));
    
            var toWarehouseParameter = toWarehouse != null ?
                new ObjectParameter("ToWarehouse", toWarehouse) :
                new ObjectParameter("ToWarehouse", typeof(string));
    
            var toBinParameter = toBin != null ?
                new ObjectParameter("ToBin", toBin) :
                new ObjectParameter("ToBin", typeof(string));
    
            var stockCodeParameter = stockCode != null ?
                new ObjectParameter("StockCode", stockCode) :
                new ObjectParameter("StockCode", typeof(string));
    
            var reelNoParameter = reelNo != null ?
                new ObjectParameter("ReelNo", reelNo) :
                new ObjectParameter("ReelNo", typeof(string));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(decimal));
    
            var journalParameter = journal != null ?
                new ObjectParameter("Journal", journal) :
                new ObjectParameter("Journal", typeof(string));
    
            var gtrReferenceParameter = gtrReference != null ?
                new ObjectParameter("GtrReference", gtrReference) :
                new ObjectParameter("GtrReference", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SaveInvTransfer", movementTypeParameter, fromWarehouseParameter, fromBinParameter, toWarehouseParameter, toBinParameter, stockCodeParameter, reelNoParameter, quantityParameter, journalParameter, gtrReferenceParameter, usernameParameter);
        }
    
        public virtual ObjectResult<sp_BaggingCheckCustomForm_Result> sp_BaggingCheckCustomForm(string lot, string job)
        {
            var lotParameter = lot != null ?
                new ObjectParameter("Lot", lot) :
                new ObjectParameter("Lot", typeof(string));
    
            var jobParameter = job != null ?
                new ObjectParameter("Job", job) :
                new ObjectParameter("Job", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_BaggingCheckCustomForm_Result>("sp_BaggingCheckCustomForm", lotParameter, jobParameter);
        }
    
        public virtual int sp_BaggingSaveCustomForm(string lot, string pallet, string job)
        {
            var lotParameter = lot != null ?
                new ObjectParameter("Lot", lot) :
                new ObjectParameter("Lot", typeof(string));
    
            var palletParameter = pallet != null ?
                new ObjectParameter("Pallet", pallet) :
                new ObjectParameter("Pallet", typeof(string));
    
            var jobParameter = job != null ?
                new ObjectParameter("Job", job) :
                new ObjectParameter("Job", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_BaggingSaveCustomForm", lotParameter, palletParameter, jobParameter);
        }
    
        public virtual int sp_BaggingUpdateCustomForm(string lot, string pallet, string job)
        {
            var lotParameter = lot != null ?
                new ObjectParameter("Lot", lot) :
                new ObjectParameter("Lot", typeof(string));
    
            var palletParameter = pallet != null ?
                new ObjectParameter("Pallet", pallet) :
                new ObjectParameter("Pallet", typeof(string));
    
            var jobParameter = job != null ?
                new ObjectParameter("Job", job) :
                new ObjectParameter("Job", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_BaggingUpdateCustomForm", lotParameter, palletParameter, jobParameter);
        }
    
        public virtual ObjectResult<sp_GetDelayedPostingProductionPallets_Result> sp_GetDelayedPostingProductionPallets(string company)
        {
            var companyParameter = company != null ?
                new ObjectParameter("Company", company) :
                new ObjectParameter("Company", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetDelayedPostingProductionPallets_Result>("sp_GetDelayedPostingProductionPallets", companyParameter);
        }
    
        public virtual ObjectResult<sp_GetKitLabourToIssue_Result> sp_GetKitLabourToIssue(string job, Nullable<decimal> quantity)
        {
            var jobParameter = job != null ?
                new ObjectParameter("Job", job) :
                new ObjectParameter("Job", typeof(string));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetKitLabourToIssue_Result>("sp_GetKitLabourToIssue", jobParameter, quantityParameter);
        }
    
        public virtual ObjectResult<sp_GetKitMaterialToIssue_Result> sp_GetKitMaterialToIssue(string job, Nullable<decimal> quantity)
        {
            var jobParameter = job != null ?
                new ObjectParameter("Job", job) :
                new ObjectParameter("Job", typeof(string));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetKitMaterialToIssue_Result>("sp_GetKitMaterialToIssue", jobParameter, quantityParameter);
        }
    
        public virtual ObjectResult<sp_GetProductionJobDetails_Result> sp_GetProductionJobDetails(string job)
        {
            var jobParameter = job != null ?
                new ObjectParameter("Job", job) :
                new ObjectParameter("Job", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetProductionJobDetails_Result>("sp_GetProductionJobDetails", jobParameter);
        }
    
        public virtual int sp_UpdateLabelReceipted(string job, string palletNo, string receipted, string journal, string username)
        {
            var jobParameter = job != null ?
                new ObjectParameter("Job", job) :
                new ObjectParameter("Job", typeof(string));
    
            var palletNoParameter = palletNo != null ?
                new ObjectParameter("PalletNo", palletNo) :
                new ObjectParameter("PalletNo", typeof(string));
    
            var receiptedParameter = receipted != null ?
                new ObjectParameter("Receipted", receipted) :
                new ObjectParameter("Receipted", typeof(string));
    
            var journalParameter = journal != null ?
                new ObjectParameter("Journal", journal) :
                new ObjectParameter("Journal", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateLabelReceipted", jobParameter, palletNoParameter, receiptedParameter, journalParameter, usernameParameter);
        }
    
        public virtual ObjectResult<sp_GetAutoDepleteLots_Result> sp_GetAutoDepleteLots(string stockCode, string warehouse, Nullable<decimal> quantity)
        {
            var stockCodeParameter = stockCode != null ?
                new ObjectParameter("StockCode", stockCode) :
                new ObjectParameter("StockCode", typeof(string));
    
            var warehouseParameter = warehouse != null ?
                new ObjectParameter("Warehouse", warehouse) :
                new ObjectParameter("Warehouse", typeof(string));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetAutoDepleteLots_Result>("sp_GetAutoDepleteLots", stockCodeParameter, warehouseParameter, quantityParameter);
        }
    }
}
